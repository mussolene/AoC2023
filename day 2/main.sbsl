структура ДанныеИгр
	пер ПутьКФайлу: Строка

	метод ПрочитатьДанные():Массив<Строка>
		возврат новый Файл(ПутьКФайлу).ОткрытьПотокЧтения().ПрочитатьКакСтроку().Разделить('\n')
	;

	метод ПолучитьСуммаИдентификаторовИгр():Число
		пер игры = ПрочитатьДанные()
		пер СуммаИгр = 0
		
		для игра из игры

			если МаксЧислоШаблона(игра, '(\ц+) red') <=12 
				и МаксЧислоШаблона(игра, '(\ц+) blue') <=13 
				и МаксЧислоШаблона(игра, '(\ц+) green') <=13
				СуммаИгр += МаксЧислоШаблона(игра, 'Game (\ц+)')
			;
		;

		возврат СуммаИгр

	;

	метод ПолучитьСуммуСтепенейИгр():Число
		пер игры = ПрочитатьДанные()
		пер СуммаИгр = 0
		
		для игра из игры

			СуммаИгр += МаксЧислоШаблона(игра, '(\ц+) red') 
						* МаксЧислоШаблона(игра, '(\ц+) blue') 
						*  МаксЧислоШаблона(игра, '(\ц+) green')
		;

		возврат СуммаИгр

	;

	метод МаксЧислоШаблона(Игра:Строка, Шаблон:Образец):Число

		пер Результат = 0

		для совпадение из Шаблон.НайтиСовпадения(Игра)

			если новый Число(совпадение.Группа(1)) > Результат
				Результат = новый Число(совпадение.Группа(1))
			;
		;

		возврат Результат
	;
;


метод Скрипт()
	пер Игры = новый ДанныеИгр("testinput.txt")
	пер ответ = Игры.ПолучитьСуммаИдентификаторовИгр()
	Консоль.Записать("Часть 1 %ответ")

	Игры = новый ДанныеИгр("testinput.txt")
	ответ = Игры.ПолучитьСуммуСтепенейИгр()
	Консоль.Записать("Часть 2 %ответ")
;